document.addEventListener('DOMContentLoaded', () => {
    // –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
    const translations = {
        ru: {
            title: "–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á",
            appName: "–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫",
            addTasks: "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á–∏",
            taskTitlePlaceholder: "–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
            lowPriority: "–ù–∏–∑–∫–∞—è",
            mediumPriority: "–°—Ä–µ–¥–Ω—è—è",
            highPriority: "–í—ã—Å–æ–∫–∞—è",
            categoryPlaceholder: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –†–∞–±–æ—Ç–∞)",
            addTaskButton: "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É",
            timeLabel: "‚è∞ –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è:",
            timePlaceholder: "–ß–ß:–ú–ú - –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:00 - 17:00)",
            submitTasks: "üìÖ –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
            scheduleTitle: "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–æ–≤–µ—Ç—ã",
            errorEmptyTasks: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–¥–∞—á!",
            errorTimeFormat: "–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú - –ß–ß:–ú–ú",
            errorApi: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        },
        en: {
            title: "AI Task Planner",
            appName: "AI Planner",
            addTasks: "Add Tasks",
            taskTitlePlaceholder: "Task Title",
            lowPriority: "Low",
            mediumPriority: "Medium",
            highPriority: "High",
            categoryPlaceholder: "Category (e.g., Work)",
            addTaskButton: "‚ûï Add Task",
            timeLabel: "‚è∞ Available Time:",
            timePlaceholder: "HH:MM - HH:MM (e.g., 09:00 - 17:00)",
            submitTasks: "üìÖ Get Schedule",
            scheduleTitle: "Schedule and Tips",
            errorEmptyTasks: "Fill in all task fields!",
            errorTimeFormat: "Specify time in HH:MM - HH:MM format",
            errorApi: "Error fetching schedule. Try again later."
        }
    };

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞
    const adConfig = {
        text: "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–µ–∫—Å—Ç", // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–µ–∫—Å—Ç
        url: "https://example.com", // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
        imageUrl: "ad-placeholder.png" // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    };

    const taskList = document.getElementById('task-list');
    const addTaskBtn = document.getElementById('add-task-btn');
    const submitTasksBtn = document.getElementById('submit-tasks');
    const timeRangeInput = document.getElementById('time-range');
    const resultSection = document.querySelector('.result');
    const scheduleOutput = document.getElementById('schedule-output');
    const languageSwitcher = document.getElementById('language-switcher');
    const themeSwitcher = document.getElementById('theme-switcher');
    const adLink = document.getElementById('ad-link');
    const adImage = document.getElementById('ad-image');
    const adText = document.getElementById('ad-text');

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–Ω–Ω–µ—Ä–∞
    adLink.href = adConfig.url;
    adImage.src = adConfig.imageUrl;
    adText.textContent = adConfig.text;

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    themeSwitcher.addEventListener('click', () => {
        document.body.classList.toggle('light-theme');
        document.body.classList.toggle('dark-theme');
        themeSwitcher.textContent = document.body.classList.contains('dark-theme') ? '‚òÄÔ∏è' : 'üåô';
        localStorage.setItem('theme', document.body.classList.contains('dark-theme') ? 'dark' : 'light');
    });

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.body.classList.add(`${savedTheme}-theme`);
    themeSwitcher.textContent = savedTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';

    // –°–º–µ–Ω–∞ —è–∑—ã–∫–∞
    function updateLanguage(lang) {
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.getAttribute('data-i18n');
            element.textContent = translations[lang][key];
        });
        document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
            const key = element.getAttribute('data-i18n-placeholder');
            element.placeholder = translations[lang][key];
        });
        document.querySelectorAll('option[data-i18n]').forEach(option => {
            const key = option.getAttribute('data-i18n');
            option.textContent = translations[lang][key];
        });
        document.title = translations[lang].title;
        localStorage.setItem('language', lang);
    }

    languageSwitcher.addEventListener('change', (e) => {
        updateLanguage(e.target.value);
    });

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
    const savedLang = localStorage.getItem('language') || 'ru';
    languageSwitcher.value = savedLang;
    updateLanguage(savedLang);

    // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    addTaskBtn.addEventListener('click', () => {
        const taskEntry = document.createElement('div');
        taskEntry.className = 'task-entry';
        taskEntry.innerHTML = `
            <input type="text" class="task-title" data-i18n-placeholder="taskTitlePlaceholder" placeholder="${translations[savedLang].taskTitlePlaceholder}" required>
            <select class="task-priority">
                <option value="–Ω–∏–∑–∫–∞—è" data-i18n="lowPriority">${translations[savedLang].lowPriority}</option>
                <option value="—Å—Ä–µ–¥–Ω—è—è" data-i18n="mediumPriority">${translations[savedLang].mediumPriority}</option>
                <option value="–≤—ã—Å–æ–∫–∞—è" data-i18n="highPriority">${translations[savedLang].highPriority}</option>
            </select>
            <input type="text" class="task-category" data-i18n-placeholder="categoryPlaceholder" placeholder="${translations[savedLang].categoryPlaceholder}" required>
            <button class="remove-task-btn" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
        `;
        taskList.appendChild(taskEntry);
    });

    // –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
    taskList.addEventListener('click', (e) => {
        if (e.target.classList.contains('remove-task-btn') && taskList.children.length > 1) {
            e.target.parentElement.remove();
        }
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞—á –∫ Gemini API
    submitTasksBtn.addEventListener('click', async () => {
        const lang = languageSwitcher.value;
        const tasks = Array.from(taskList.querySelectorAll('.task-entry')).map(entry => ({
            title: entry.querySelector('.task-title').value,
            priority: entry.querySelector('.task-priority').value,
            category: entry.querySelector('.task-category').value
        }));
        const timeRange = timeRangeInput.value;

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!tasks.every(task => task.title && task.category)) {
            alert(translations[lang].errorEmptyTasks);
            return;
        }
        if (!timeRange.match(/^\d{2}:\d{2}\s*-\s*\d{2}:\d{2}$/)) {
            alert(translations[lang].errorTimeFormat);
            return;
        }

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ Gemini
        const taskListText = tasks.map((task, i) => `- ${task.title} (–í–∞–∂–Ω–æ—Å—Ç—å: ${task.priority}, –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${task.category})`).join('\n');
        const prompt = `
            –¢—ã ‚Äî –ò–ò-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á. –£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞—á–∏:
            ${taskListText}
            –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è: ${timeRange}.
            –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏ –∑–∞–¥–∞—á–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞–π —Å–æ–≤–µ—Ç, –∫–∞–∫ –ª—É—á—à–µ –∏—Ö –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
            –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown:
            - –ò—Å–ø–æ–ª—å–∑—É–π **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, **–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ** –∏ **–°–æ–≤–µ—Ç**).
            - –í—Ä–µ–º—è –∏ –∑–∞–¥–∞—á–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –ø–∏—à–∏ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ —Å `-`.
            - –°–æ–≤–µ—Ç –æ—Ñ–æ—Ä–º–∏ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å —Ç—Ä–æ–π–Ω—ã–º–∏ –æ–±—Ä–∞—Ç–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏ \`\`\`.
            - –°–¥–µ–ª–∞–π –æ—Ç–≤–µ—Ç –∫—Ä–∞—Ç–∫–∏–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.
        `;

        try {
            const response = await fetch('https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=AIzaSyCUtheYwMYUhwkTjT5avcSGwetGXFqF-f0', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    contents: [{ parts: [{ text: prompt }] }]
                })
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const data = await response.json();
            if (!data.candidates || !data.candidates[0].content.parts[0].text) {
                throw new Error('Invalid response from Gemini API');
            }

            const schedule = data.candidates[0].content.parts[0].text;
            scheduleOutput.textContent = schedule;
            resultSection.classList.remove('hidden');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            alert(translations[lang].errorApi);
            // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            scheduleOutput.textContent = `
**–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ**
- 09:00 - 10:00: –ü—Ä–∏–º–µ—Ä –∑–∞–¥–∞—á–∏ 1
- 10:00 - 11:00: –ü—Ä–∏–º–µ—Ä –∑–∞–¥–∞—á–∏ 2

**–°–æ–≤–µ—Ç**
\`\`\`
–ù–∞—á–Ω–∏—Ç–µ —Å —Å–∞–º–æ–π –≤–∞–∂–Ω–æ–π –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é.
\`\`\`
            `;
            resultSection.classList.remove('hidden');
        }
    });
});
