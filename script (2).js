const adConfig = {
    small: {
        text: {
            en: "Check out our new product!", es: "┬бDescubre nuestro nuevo producto!", zh: "ф║ЖшзгцИСф╗мчЪДцЦ░ф║зхУБя╝Б", hi: "рд╣рдорд╛рд░реЗ рдирдП рдЙрддреНрдкрд╛рдж рдХреЛ рджреЗрдЦреЗрдВ!",
            ru: "╨Ю╨╖╨╜╨░╨║╨╛╨╝╤М╤В╨╡╤Б╤М ╤Б ╨╜╨╛╨▓╤Л╨╝ ╨┐╤А╨╛╨┤╤Г╨║╤В╨╛╨╝!", fr: "D├йcouvrez notre nouveau produit !", de: "Schauen Sie sich unser neues Produkt an!",
            ja: "цЦ░шг╜хУБуВТуБФшжзуБПуБауБХуБДя╝Б", pt: "Confira nosso novo produto!", ar: "╪з╪╖┘Д╪╣ ╪╣┘Д┘Й ┘Е┘Ж╪к╪м┘Ж╪з ╪з┘Д╪м╪п┘К╪п!", it: "Scopri il nostro nuovo prodotto!", ko: "ьГИ ьаЬэТИьЭД эЩХьЭ╕эХШьД╕ьЪФ!"
        },
        url: "https://example.com",
        imageSrc: "https://via.placeholder.com/32"
    },
    big: {
        text: {
            en: "Join our community!", es: "┬б├Ъnete a nuestra comunidad!", zh: "хКахЕецИСф╗мчЪДчд╛хМ║я╝Б", hi: "рд╣рдорд╛рд░реЗ рд╕рдореБрджрд╛рдп рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛрдВ!",
            ru: "╨Я╤А╨╕╤Б╨╛╨╡╨┤╨╕╨╜╤П╨╣╤В╨╡╤Б╤М ╨║ ╨╜╨░╤И╨╡╨╝╤Г ╤Б╨╛╨╛╨▒╤Й╨╡╤Б╤В╨▓╤Г!", fr: "Rejoignez notre communaut├й !", de: "Treten Sie unserer Gemeinschaft bei!",
            ja: "уВ│уГЯуГеуГЛуГЖуВгуБлхПВхКауБЧуВИуБЖя╝Б", pt: "Junte-se ├а nossa comunidade!", ar: "╪з┘Ж╪╢┘Е ╪е┘Д┘Й ┘Е╪м╪к┘Е╪╣┘Ж╪з!", it: "Unisciti alla nostra comunit├а!", ko: "ь╗дыодыЛИэЛ░ьЧР ъ░АьЮЕэХШьД╕ьЪФ!"
        },
        url: "https://example.com",
        imageSrc: "https://via.placeholder.com/48"
    }
};

const translations = {
    en: {
        site_name: "AI Task Planner", title: "AI Task Planner", welcome: "Hello! I'm your AI task planner.",
        step_tasks: "Enter tasks separated by commas.", step_importances: "Specify importance (low, medium, high).",
        step_time: "Specify time (HH:MM - HH:MM).", step_save: "Enter plan name.", placeholder_tasks: "Prepare presentation, Reply to emails",
        placeholder_importances: "high, medium, low", placeholder_time: "09:00 - 17:00", placeholder_save: "My daily plan",
        continue: "Continue", back: "Back", skip: "Skip", done: "Save", success_message: "Plan created!",
        history_title: "Plan History", no_history: "No saved plans.", clear_history: "Clear History", tasks_label: "Tasks",
        importances_label: "Importances", time_label: "Time", schedule_label: "Schedule", advice_label: "Advice",
        task_count: "Tasks: {count}", error_tasks: "Enter at least one task.", error_importances: "Match importance count to tasks.",
        error_time: "Use HH:MM - HH:MM format.", error_save: "Enter a plan name.", error_processing: "Processing error.",
        loading: "Loading...", language_title: "Select Language", style_title: "Select Style", theme_title: "Toggle Theme",
        minimal: "Minimal ЁЯМЯ", retro: "Retro ЁЯОЙ", cosmic: "Cosmic ЁЯММ", cyberpunk: "Cyberpunk ЁЯМА", industrial: "Industrial тЪЩя╕П",
        hologram: "Hologram ЁЯМИ", steampunk: "Steampunk ЁЯХ░я╕П", aurora: "Aurora ЁЯМа", matrix: "Matrix ЁЯТ╛", zen: "Zen ЁЯМ┐",
        cyberwave: "Cyberwave ЁЯМК", modern: "Modern ЁЯПЩя╕П"
    },
    es: {
        site_name: "Planificador de Tareas IA", title: "Planificador de Tareas IA", welcome: "┬бHola! Soy tu planificador de tareas IA.",
        step_tasks: "Ingresa tareas separadas por comas.", step_importances: "Especifica importancia (baja, media, alta).",
        step_time: "Especifica tiempo (HH:MM - HH:MM).", step_save: "Ingresa nombre del plan.", placeholder_tasks: "Preparar presentaci├│n, Responder correos",
        placeholder_importances: "alta, media, baja", placeholder_time: "09:00 - 17:00", placeholder_save: "Mi plan diario",
        continue: "Continuar", back: "Atr├бs", skip: "Omitir", done: "Guardar", success_message: "┬бPlan creado!",
        history_title: "Historial de Planes", no_history: "No hay planes guardados.", clear_history: "Borrar Historial",
        tasks_label: "Tareas", importances_label: "Importancias", time_label: "Tiempo", schedule_label: "Horario",
        advice_label: "Consejo", task_count: "Tareas: {count}", error_tasks: "Ingresa al menos una tarea.",
        error_importances: "Coincide el n├║mero de importancias con las tareas.", error_time: "Usa el formato HH:MM - HH:MM.",
        error_save: "Ingresa un nombre de plan.", error_processing: "Error de procesamiento.", loading: "Cargando...",
        language_title: "Seleccionar Idioma", style_title: "Seleccionar Estilo", theme_title: "Cambiar Tema",
        minimal: "Minimalista ЁЯМЯ", retro: "Retro ЁЯОЙ", cosmic: "C├│smico ЁЯММ", cyberpunk: "Ciberpunk ЁЯМА", industrial: "Industrial тЪЩя╕П",
        hologram: "Holograma ЁЯМИ", steampunk: "Steampunk ЁЯХ░я╕П", aurora: "Aurora ЁЯМа", matrix: "Matrix ЁЯТ╛", zen: "Zen ЁЯМ┐",
        cyberwave: "Ciberonda ЁЯМК", modern: "Moderno ЁЯПЩя╕П"
    },
    zh: {
        site_name: "ф║║х╖ецЩ║шГ╜ф╗╗хКбшзДхИТхЩи", title: "ф║║х╖ецЩ║шГ╜ф╗╗хКбшзДхИТхЩи", welcome: "ф╜ахе╜я╝БцИСцШпф╜ачЪДAIф╗╗хКбшзДхИТхЩиуАВ",
        step_tasks: "ш╛УхЕеф╗ещАЧхП╖хИЖщЪФчЪДф╗╗хКбуАВ", step_importances: "цМЗхоЪщЗНшжБцАзя╝Иф╜ОуАБф╕нуАБщлШя╝ЙуАВ",
        step_time: "цМЗхоЪцЧ╢щЧ┤я╝ИHH:MM - HH:MMя╝ЙуАВ", step_save: "ш╛УхЕешобхИТхРНчз░уАВ", placeholder_tasks: "хЗЖхдЗц╝Фчд║цЦЗчи┐я╝МхЫЮхдНщВоф╗╢",
        placeholder_importances: "щлШуАБф╕нуАБф╜О", placeholder_time: "09:00 - 17:00", placeholder_save: "цИСчЪДцпПцЧешобхИТ",
        continue: "ч╗зч╗н", back: "ш┐ФхЫЮ", skip: "ш╖│ш┐З", done: "ф┐ЭхнШ", success_message: "шобхИТхИЫх╗║цИРхКЯя╝Б",
        history_title: "шобхИТхОЖхП▓", no_history: "ц▓бцЬЙф┐ЭхнШчЪДшобхИТуАВ", clear_history: "ц╕ЕщЩдхОЖхП▓", tasks_label: "ф╗╗хКб",
        importances_label: "щЗНшжБцАз", time_label: "цЧ╢щЧ┤", schedule_label: "цЧечиЛ", advice_label: "х╗║шоо",
        task_count: "ф╗╗хКбцХ░я╝Ъ{count}", error_tasks: "шЗ│х░Сш╛УхЕеф╕Аф╕кф╗╗хКбуАВ", error_importances: "щЗНшжБцАзцХ░щЗПщЬАф╕Оф╗╗хКбхМ╣щЕНуАВ",
        error_time: "ф╜┐чФиHH:MM - HH:MMца╝х╝ПуАВ", error_save: "ш╛УхЕешобхИТхРНчз░уАВ", error_processing: "хдДчРЖщФЩшппуАВ",
        loading: "хКаш╜╜ф╕н...", language_title: "щАЙцЛйшпншиА", style_title: "щАЙцЛйщгОца╝", theme_title: "хИЗцНвф╕╗щвШ",
        minimal: "цЮБчоА ЁЯМЯ", retro: "хдНхПд ЁЯОЙ", cosmic: "хоЗхоЩ ЁЯММ", cyberpunk: "ш╡ЫхНЪцЬЛхЕЛ ЁЯМА", industrial: "х╖еф╕Ъ тЪЩя╕П",
        hologram: "хЕицБп ЁЯМИ", steampunk: "шТ╕ц▒╜цЬЛхЕЛ ЁЯХ░я╕П", aurora: "цЮБхЕЙ ЁЯМа", matrix: "чЯйщШ╡ ЁЯТ╛", zen: "чжЕ ЁЯМ┐",
        cyberwave: "ш╡ЫхНЪц│в ЁЯМК", modern: "чО░ф╗г ЁЯПЩя╕П"
    },
    hi: {
        site_name: "рдПрдЖрдИ рдХрд╛рд░реНрдп рдпреЛрдЬрдирд╛рдХрд╛рд░", title: "рдПрдЖрдИ рдХрд╛рд░реНрдп рдпреЛрдЬрдирд╛рдХрд╛рд░", welcome: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рдПрдЖрдИ рдХрд╛рд░реНрдп рдпреЛрдЬрдирд╛рдХрд╛рд░ рд╣реВрдБред",
        step_tasks: "рдЕрд▓реНрдкрд╡рд┐рд░рд╛рдо рд╕реЗ рдЕрд▓рдЧ рдХрд┐рдП рдЧрдП рдХрд╛рд░реНрдп рджрд░реНрдЬ рдХрд░реЗрдВред", step_importances: "рдорд╣рддреНрд╡ рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдХрд░реЗрдВ (рдирд┐рдореНрди, рдордзреНрдпрдо, рдЙрдЪреНрдЪ)ред",
        step_time: "рд╕рдордп рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдХрд░реЗрдВ (HH:MM - HH:MM)ред", step_save: "рдпреЛрдЬрдирд╛ рдХрд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВред", placeholder_tasks: "рдкреНрд░рд╕реНрддреБрддрд┐ рддреИрдпрд╛рд░ рдХрд░реЗрдВ, рдИрдореЗрд▓ рдХрд╛ рдЬрд╡рд╛рдм рджреЗрдВ",
        placeholder_importances: "рдЙрдЪреНрдЪ, рдордзреНрдпрдо, рдирд┐рдореНрди", placeholder_time: "09:00 - 17:00", placeholder_save: "рдореЗрд░рд╛ рджреИрдирд┐рдХ рдпреЛрдЬрдирд╛",
        continue: "рдЬрд╛рд░реА рд░рдЦреЗрдВ", back: "рдкреАрдЫреЗ", skip: "рдЫреЛрдбрд╝реЗрдВ", done: "рд╕рд╣реЗрдЬреЗрдВ", success_message: "рдпреЛрдЬрдирд╛ рдмрдирд╛рдИ рдЧрдИ!",
        history_title: "рдпреЛрдЬрдирд╛ рдЗрддрд┐рд╣рд╛рд╕", no_history: "рдХреЛрдИ рд╕рд╣реЗрдЬреА рдЧрдИ рдпреЛрдЬрдирд╛ рдирд╣реАрдВред", clear_history: "рдЗрддрд┐рд╣рд╛рд╕ рд╕рд╛рдл рдХрд░реЗрдВ",
        tasks_label: "рдХрд╛рд░реНрдп", importances_label: "рдорд╣рддреНрд╡", time_label: "рд╕рдордп", schedule_label: "рдХрд╛рд░реНрдпрд╕реВрдЪреА",
        advice_label: "рд╕рд▓рд╛рд╣", task_count: "рдХрд╛рд░реНрдп: {count}", error_tasks: "рдХрдо рд╕реЗ рдХрдо рдПрдХ рдХрд╛рд░реНрдп рджрд░реНрдЬ рдХрд░реЗрдВред",
        error_importances: "рдорд╣рддреНрд╡ рдХреА рд╕рдВрдЦреНрдпрд╛ рдХрд╛рд░реНрдпреЛрдВ рд╕реЗ рдореЗрд▓ рдЦрд╛рдиреА рдЪрд╛рд╣рд┐рдПред", error_time: "HH:MM - HH:MM рдкреНрд░рд╛рд░реВрдк рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред",
        error_save: "рдпреЛрдЬрдирд╛ рдХрд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВред", error_processing: "рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рддреНрд░реБрдЯрд┐ред", loading: "рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...",
        language_title: "рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ", style_title: "рд╢реИрд▓реА рдЪреБрдиреЗрдВ", theme_title: "рдереАрдо рдмрджрд▓реЗрдВ",
        minimal: "рдиреНрдпреВрдирддрдо ЁЯМЯ", retro: "рд░реЗрдЯреНрд░реЛ ЁЯОЙ", cosmic: "рдХреЙрд╕реНрдорд┐рдХ ЁЯММ", cyberpunk: "рд╕рд╛рдЗрдмрд░рдкрдВрдХ ЁЯМА", industrial: "рдФрджреНрдпреЛрдЧрд┐рдХ тЪЩя╕П",
        hologram: "рд╣реЛрд▓реЛрдЧреНрд░рд╛рдо ЁЯМИ", steampunk: "рд╕реНрдЯреАрдордкрдВрдХ ЁЯХ░я╕П", aurora: "рдСрд░реЛрд░рд╛ ЁЯМа", matrix: "рдореИрдЯреНрд░рд┐рдХреНрд╕ ЁЯТ╛", zen: "рдЬрд╝реЗрди ЁЯМ┐",
        cyberwave: "рд╕рд╛рдЗрдмрд░рд╡реЗрд╡ ЁЯМК", modern: "рдЖрдзреБрдирд┐рдХ ЁЯПЩя╕П"
    },
    ru: {
        site_name: "╨Ш╨Ш-╨Я╨╗╨░╨╜╨╕╤А╨╛╨▓╤Й╨╕╨║ ╨╖╨░╨┤╨░╤З", title: "╨Ш╨Ш-╨Я╨╗╨░╨╜╨╕╤А╨╛╨▓╤Й╨╕╨║ ╨╖╨░╨┤╨░╤З", welcome: "╨Я╤А╨╕╨▓╨╡╤В! ╨п ╤В╨▓╨╛╨╣ ╨Ш╨Ш-╨┐╨╗╨░╨╜╨╕╤А╨╛╨▓╤Й╨╕╨║ ╨╖╨░╨┤╨░╤З.",
        step_tasks: "╨Т╨▓╨╡╨┤╨╕╤В╨╡ ╨╖╨░╨┤╨░╤З╨╕ ╤З╨╡╤А╨╡╨╖ ╨╖╨░╨┐╤П╤В╤Г╤О.", step_importances: "╨г╨║╨░╨╢╨╕╤В╨╡ ╨▓╨░╨╢╨╜╨╛╤Б╤В╤М (╨╜╨╕╨╖╨║╨░╤П, ╤Б╤А╨╡╨┤╨╜╤П╤П, ╨▓╤Л╤Б╨╛╨║╨░╤П).",
        step_time: "╨г╨║╨░╨╢╨╕╤В╨╡ ╨▓╤А╨╡╨╝╤П (╨з╨з:╨Ь╨Ь - ╨з╨з:╨Ь╨Ь).", step_save: "╨Т╨▓╨╡╨┤╨╕╤В╨╡ ╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨┐╨╗╨░╨╜╨░.", placeholder_tasks: "╨Я╨╛╨┤╨│╨╛╤В╨╛╨▓╨╕╤В╤М ╨┐╤А╨╡╨╖╨╡╨╜╤В╨░╤Ж╨╕╤О, ╨Ю╤В╨▓╨╡╤В╨╕╤В╤М ╨╜╨░ ╨┐╨╕╤Б╤М╨╝╨░",
        placeholder_importances: "╨▓╤Л╤Б╨╛╨║╨░╤П, ╤Б╤А╨╡╨┤╨╜╤П╤П, ╨╜╨╕╨╖╨║╨░╤П", placeholder_time: "09:00 - 17:00", placeholder_save: "╨Ь╨╛╨╣ ╨┐╨╗╨░╨╜ ╨╜╨░ ╨┤╨╡╨╜╤М",
        continue: "╨Я╤А╨╛╨┤╨╛╨╗╨╢╨╕╤В╤М", back: "╨Э╨░╨╖╨░╨┤", skip: "╨Я╤А╨╛╨┐╤Г╤Б╤В╨╕╤В╤М", done: "╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М", success_message: "╨Я╨╗╨░╨╜ ╤Б╨╛╨╖╨┤╨░╨╜!",
        history_title: "╨Ш╤Б╤В╨╛╤А╨╕╤П ╨┐╨╗╨░╨╜╨╛╨▓", no_history: "╨Э╨╡╤В ╤Б╨╛╤Е╤А╨░╨╜╨╡╨╜╨╜╤Л╤Е ╨┐╨╗╨░╨╜╨╛╨▓.", clear_history: "╨Ю╤З╨╕╤Б╤В╨╕╤В╤М ╨╕╤Б╤В╨╛╤А╨╕╤О",
        tasks_label: "╨Ч╨░╨┤╨░╤З╨╕", importances_label: "╨Т╨░╨╢╨╜╨╛╤Б╤В╨╕", time_label: "╨Т╤А╨╡╨╝╤П", schedule_label: "╨а╨░╤Б╨┐╨╕╤Б╨░╨╜╨╕╨╡",
        advice_label: "╨б╨╛╨▓╨╡╤В", task_count: "╨Ч╨░╨┤╨░╤З: {count}", error_tasks: "╨Т╨▓╨╡╨┤╨╕╤В╨╡ ╤Е╨╛╤В╤П ╨▒╤Л ╨╛╨┤╨╜╤Г ╨╖╨░╨┤╨░╤З╤Г.",
        error_importances: "╨Ъ╨╛╨╗╨╕╤З╨╡╤Б╤В╨▓╨╛ ╨▓╨░╨╢╨╜╨╛╤Б╤В╨╡╨╣ ╨┤╨╛╨╗╨╢╨╜╨╛ ╤Б╨╛╨▓╨┐╨░╨┤╨░╤В╤М ╤Б ╨╖╨░╨┤╨░╤З╨░╨╝╨╕.", error_time: "╨Ш╤Б╨┐╨╛╨╗╤М╨╖╤Г╨╣╤В╨╡ ╤Д╨╛╤А╨╝╨░╤В ╨з╨з:╨Ь╨Ь - ╨з╨з:╨Ь╨Ь.",
        error_save: "╨Т╨▓╨╡╨┤╨╕╤В╨╡ ╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨┐╨╗╨░╨╜╨░.", error_processing: "╨Ю╤И╨╕╨▒╨║╨░ ╨╛╨▒╤А╨░╨▒╨╛╤В╨║╨╕.", loading: "╨Ч╨░╨│╤А╤Г╨╖╨║╨░...",
        language_title: "╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╤П╨╖╤Л╨║", style_title: "╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╤Б╤В╨╕╨╗╤М", theme_title: "╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╤В╨╡╨╝╤Г",
        minimal: "╨Ь╨╕╨╜╨╕╨╝╨░╨╗╨╕╨╖╨╝ ЁЯМЯ", retro: "╨а╨╡╤В╤А╨╛ ЁЯОЙ", cosmic: "╨Ъ╨╛╤Б╨╝╨╛╤Б ЁЯММ", cyberpunk: "╨Ъ╨╕╨▒╨╡╤А╨┐╨░╨╜╨║ ЁЯМА", industrial: "╨Ш╨╜╨┤╨░╤Б╤В╤А╨╕╨░╨╗ тЪЩя╕П",
        hologram: "╨У╨╛╨╗╨╛╨│╤А╨░╨╝╨╝╨░ ЁЯМИ", steampunk: "╨б╤В╨╕╨╝╨┐╨░╨╜╨║ ЁЯХ░я╕П", aurora: "╨Р╨▓╤А╨╛╤А╨░ ЁЯМа", matrix: "╨Ь╨░╤В╤А╨╕╤Ж╨░ ЁЯТ╛", zen: "╨Ф╨╖╨╡╨╜ ЁЯМ┐",
        cyberwave: "╨Ъ╨╕╨▒╨╡╤А╨▓╨╛╨╗╨╜╨░ ЁЯМК", modern: "╨Ь╨╛╨┤╨╡╤А╨╜ ЁЯПЩя╕П"
    },
    fr: {
        site_name: "Planificateur de T├вches IA", title: "Planificateur de T├вches IA", welcome: "Bonjour ! Je suis votre planificateur de t├вches IA.",
        step_tasks: "Entrez les t├вches s├йpar├йes par des virgules.", step_importances: "Sp├йcifiez l'importance (faible, moyenne, ├йlev├йe).",
        step_time: "Sp├йcifiez l'heure (HH:MM - HH:MM).", step_save: "Entrez le nom du plan.", placeholder_tasks: "Pr├йparer une pr├йsentation, R├йpondre aux emails",
        placeholder_importances: "├йlev├йe, moyenne, faible", placeholder_time: "09:00 - 17:00", placeholder_save: "Mon plan quotidien",
        continue: "Continuer", back: "Retour", skip: "Passer", done: "Sauvegarder", success_message: "Plan cr├й├й !",
        history_title: "Historique des Plans", no_history: "Aucun plan sauvegard├й.", clear_history: "Effacer l'Historique",
        tasks_label: "T├вches", importances_label: "Importances", time_label: "Temps", schedule_label: "Emploi du temps",
        advice_label: "Conseil", task_count: "T├вches : {count}", error_tasks: "Entrez au moins une t├вche.",
        error_importances: "Le nombre d'importances doit correspondre aux t├вches.", error_time: "Utilisez le format HH:MM - HH:MM.",
        error_save: "Entrez un nom de plan.", error_processing: "Erreur de traitement.", loading: "Chargement...",
        language_title: "S├йlectionner la Langue", style_title: "S├йlectionner le Style", theme_title: "Changer de Th├иme",
        minimal: "Minimaliste ЁЯМЯ", retro: "R├йtro ЁЯОЙ", cosmic: "Cosmique ЁЯММ", cyberpunk: "Cyberpunk ЁЯМА", industrial: "Industriel тЪЩя╕П",
        hologram: "Hologramme ЁЯМИ", steampunk: "Steampunk ЁЯХ░я╕П", aurora: "Aurore ЁЯМа", matrix: "Matrice ЁЯТ╛", zen: "Zen ЁЯМ┐",
        cyberwave: "Cyberonde ЁЯМК", modern: "Moderne ЁЯПЩя╕П"
    },
    de: {
        site_name: "KI-Aufgabenplaner", title: "KI-Aufgabenplaner", welcome: "Hallo! Ich bin dein KI-Aufgabenplaner.",
        step_tasks: "Gib Aufgaben durch Kommas getrennt ein.", step_importances: "Gib die Wichtigkeit an (niedrig, mittel, hoch).",
        step_time: "Gib die Zeit an (HH:MM - HH:MM).", step_save: "Gib einen Namen f├╝r den Plan ein.", placeholder_tasks: "Pr├дsentation vorbereiten, E-Mails beantworten",
        placeholder_importances: "hoch, mittel, niedrig", placeholder_time: "09:00 - 17:00", placeholder_save: "Mein Tagesplan",
        continue: "Weiter", back: "Zur├╝ck", skip: "├Ьberspringen", done: "Speichern", success_message: "Plan erstellt!",
        history_title: "Planverlauf", no_history: "Keine gespeicherten Pl├дne.", clear_history: "Verlauf l├╢schen",
        tasks_label: "Aufgaben", importances_label: "Wichtigkeiten", time_label: "Zeit", schedule_label: "Zeitplan",
        advice_label: "Rat", task_count: "Aufgaben: {count}", error_tasks: "Gib mindestens eine Aufgabe ein.",
        error_importances: "Die Anzahl der Wichtigkeiten muss mit den Aufgaben ├╝bereinstimmen.", error_time: "Verwende das Format HH:MM - HH:MM.",
        error_save: "Gib einen Namen f├╝r den Plan ein.", error_processing: "Verarbeitungsfehler.", loading: "Laden...",
        language_title: "Sprache ausw├дhlen", style_title: "Stil ausw├дhlen", theme_title: "Thema wechseln",
        minimal: "Minimalistisch ЁЯМЯ", retro: "Retro ЁЯОЙ", cosmic: "Kosmisch ЁЯММ", cyberpunk: "Cyberpunk ЁЯМА", industrial: "Industriell тЪЩя╕П",
        hologram: "Hologramm ЁЯМИ", steampunk: "Steampunk ЁЯХ░я╕П", aurora: "Aurora ЁЯМа", matrix: "Matrix ЁЯТ╛", zen: "Zen ЁЯМ┐",
        cyberwave: "Cyberwelle ЁЯМК", modern: "Modern ЁЯПЩя╕П"
    },
    ja: {
        site_name: "AIуВ┐уВ╣уВпуГЧуГйуГ│уГКуГ╝", title: "AIуВ┐уВ╣уВпуГЧуГйуГ│уГКуГ╝", welcome: "уБУуВУуБлуБбуБпя╝БчзБуБпуБВуБкуБЯуБоAIуВ┐уВ╣уВпуГЧуГйуГ│уГКуГ╝уБзуБЩуАВ",
        step_tasks: "уВлуГ│уГЮуБзхМ║хИЗуВЙуВМуБЯуВ┐уВ╣уВпуВТхЕехКЫуБЧуБжуБПуБауБХуБДуАВ", step_importances: "щЗНшжБх║жуВТцМЗхоЪуБЧуБжуБПуБауБХуБДя╝Иф╜ОуАБф╕нуАБщлШя╝ЙуАВ",
        step_time: "цЩВщЦУуВТцМЗхоЪуБЧуБжуБПуБауБХуБДя╝ИHH:MM - HH:MMя╝ЙуАВ", step_save: "уГЧуГйуГ│уБохРНхЙНуВТхЕехКЫуБЧуБжуБПуБауБХуБДуАВ", placeholder_tasks: "уГЧуГмуВ╝уГ│уГЖуГ╝уВ╖уГзуГ│уБоц║ЦхВЩуАБуГбуГ╝уГлуБош┐Фф┐б",
        placeholder_importances: "щлШуАБф╕нуАБф╜О", placeholder_time: "09:00 - 17:00", placeholder_save: "чзБуБоуГЗуВдуГкуГ╝уГЧуГйуГ│",
        continue: "ч╢ЪуБСуВЛ", back: "цИ╗уВЛ", skip: "уВ╣уВнуГГуГЧ", done: "ф┐ЭхнШ", success_message: "уГЧуГйуГ│уБМф╜ЬцИРуБХуВМуБ╛уБЧуБЯя╝Б",
        history_title: "уГЧуГйуГ│х▒ецн┤", no_history: "ф┐ЭхнШуБХуВМуБЯуГЧуГйуГ│уБпуБВуВКуБ╛уБЫуВУуАВ", clear_history: "х▒ецн┤уВТуВпуГкуВв",
        tasks_label: "уВ┐уВ╣уВп", importances_label: "щЗНшжБх║ж", time_label: "цЩВщЦУ", schedule_label: "уВ╣уВ▒уВ╕уГеуГ╝уГл",
        advice_label: "уВвуГЙуГРуВдуВ╣", task_count: "уВ┐уВ╣уВпцХ░я╝Ъ{count}", error_tasks: "х░СуБкуБПуБиуВВ1уБдуБоуВ┐уВ╣уВпуВТхЕехКЫуБЧуБжуБПуБауБХуБДуАВ",
        error_importances: "щЗНшжБх║жуБоцХ░уБпуВ┐уВ╣уВпуБиф╕АшЗ┤уБЩуВЛх┐ЕшжБуБМуБВуВКуБ╛уБЩуАВ", error_time: "HH:MM - HH:MMуБох╜вх╝ПуВТф╜┐чФиуБЧуБжуБПуБауБХуБДуАВ",
        error_save: "уГЧуГйуГ│уБохРНхЙНуВТхЕехКЫуБЧуБжуБПуБауБХуБДуАВ", error_processing: "хЗжчРЖуВиуГйуГ╝уАВ", loading: "шкнуБ┐ш╛╝уБ┐ф╕н...",
        language_title: "шиАшкЮуВТщБ╕цКЮ", style_title: "уВ╣уВ┐уВдуГлуВТщБ╕цКЮ", theme_title: "уГЖуГ╝уГЮуВТхИЗуВКцЫ┐уБИ",
        minimal: "уГЯуГЛуГЮуГл ЁЯМЯ", retro: "уГмуГИуГн ЁЯОЙ", cosmic: "уВ│уВ║уГЯуГГуВп ЁЯММ", cyberpunk: "уВ╡уВдуГРуГ╝уГСуГ│уВп ЁЯМА", industrial: "уВдуГ│уГАуВ╣уГИуГкуВвуГл тЪЩя╕П",
        hologram: "уГЫуГнуВ░уГйуГа ЁЯМИ", steampunk: "уВ╣уГБуГ╝уГауГСуГ│уВп ЁЯХ░я╕П", aurora: "уВкуГ╝уГнуГй ЁЯМа", matrix: "уГЮуГИуГкуГГуВпуВ╣ ЁЯТ╛", zen: "чжЕ ЁЯМ┐",
        cyberwave: "уВ╡уВдуГРуГ╝уВжуВзуГ╝уГЦ ЁЯМК", modern: "уГвуГАуГ│ ЁЯПЩя╕П"
    },
    pt: {
        site_name: "Planejador de Tarefas IA", title: "Planejador de Tarefas IA", welcome: "Ol├б! Eu sou seu planejador de tarefas IA.",
        step_tasks: "Insira tarefas separadas por v├нrgulas.", step_importances: "Especifique a import├вncia (baixa, m├йdia, alta).",
        step_time: "Especifique o hor├бrio (HH:MM - HH:MM).", step_save: "Insira o nome do plano.", placeholder_tasks: "Preparar apresenta├з├гo, Responder e-mails",
        placeholder_importances: "alta, m├йdia, baixa", placeholder_time: "09:00 - 17:00", placeholder_save: "Meu plano di├бrio",
        continue: "Continuar", back: "Voltar", skip: "Pular", done: "Salvar", success_message: "Plano criado!",
        history_title: "Hist├│rico de Planos", no_history: "Nenhum plano salvo.", clear_history: "Limpar Hist├│rico",
        tasks_label: "Tarefas", importances_label: "Import├вncias", time_label: "Hor├бrio", schedule_label: "Cronograma",
        advice_label: "Conselho", task_count: "Tarefas: {count}", error_tasks: "Insira pelo menos uma tarefa.",
        error_importances: "O n├║mero de import├вncias deve corresponder ├аs tarefas.", error_time: "Use o formato HH:MM - HH:MM.",
        error_save: "Insira um nome para o plano.", error_processing: "Erro de processamento.", loading: "Carregando...",
        language_title: "Selecionar Idioma", style_title: "Selecionar Estilo", theme_title: "Alternar Tema",
        minimal: "Minimalista ЁЯМЯ", retro: "Retr├┤ ЁЯОЙ", cosmic: "C├│smico ЁЯММ", cyberpunk: "Ciberpunk ЁЯМА", industrial: "Industrial тЪЩя╕П",
        hologram: "Holograma ЁЯМИ", steampunk: "Steampunk ЁЯХ░я╕П", aurora: "Aurora ЁЯМа", matrix: "Matrix ЁЯТ╛", zen: "Zen ЁЯМ┐",
        cyberwave: "Ciberonda ЁЯМК", modern: "Moderno ЁЯПЩя╕П"
    },
    ar: {
        site_name: "┘Е╪о╪╖╪╖ ╪з┘Д┘Е┘З╪з┘Е ╪и╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К", title: "┘Е╪о╪╖╪╖ ╪з┘Д┘Е┘З╪з┘Е ╪и╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К", welcome: "┘Е╪▒╪н╪и┘Л╪з! ╪г┘Ж╪з ┘Е╪о╪╖╪╖ ╪з┘Д┘Е┘З╪з┘Е ╪и╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К ╪з┘Д╪о╪з╪╡ ╪и┘Г.",
        step_tasks: "╪г╪п╪о┘Д ╪з┘Д┘Е┘З╪з┘Е ┘Е┘Б╪╡┘И┘Д╪й ╪и┘Б┘И╪з╪╡┘Д.", step_importances: "╪н╪п╪п ╪з┘Д╪г┘З┘Е┘К╪й (┘Е┘Ж╪о┘Б╪╢╪й╪М ┘Е╪к┘И╪│╪╖╪й╪М ╪╣╪з┘Д┘К╪й).",
        step_time: "╪н╪п╪п ╪з┘Д┘И┘В╪к (HH:MM - HH:MM).", step_save: "╪г╪п╪о┘Д ╪з╪│┘Е ╪з┘Д╪о╪╖╪й.", placeholder_tasks: "╪е╪╣╪п╪з╪п ╪з┘Д╪╣╪▒╪╢ ╪з┘Д╪к┘В╪п┘К┘Е┘К╪М ╪з┘Д╪▒╪п ╪╣┘Д┘Й ╪з┘Д╪и╪▒┘К╪п ╪з┘Д╪е┘Д┘Г╪к╪▒┘И┘Ж┘К",
        placeholder_importances: "╪╣╪з┘Д┘К╪й╪М ┘Е╪к┘И╪│╪╖╪й╪М ┘Е┘Ж╪о┘Б╪╢╪й", placeholder_time: "09:00 - 17:00", placeholder_save: "╪о╪╖╪к┘К ╪з┘Д┘К┘И┘Е┘К╪й",
        continue: "┘Е╪к╪з╪и╪╣╪й", back: "╪▒╪м┘И╪╣", skip: "╪к╪о╪╖┘К", done: "╪н┘Б╪╕", success_message: "╪к┘Е ╪е┘Ж╪┤╪з╪б ╪з┘Д╪о╪╖╪й!",
        history_title: "╪к╪з╪▒┘К╪о ╪з┘Д╪о╪╖╪╖", no_history: "┘Д╪з ╪к┘И╪м╪п ╪о╪╖╪╖ ┘Е╪н┘Б┘И╪╕╪й.", clear_history: "┘Е╪│╪н ╪з┘Д╪к╪з╪▒┘К╪о",
        tasks_label: "╪з┘Д┘Е┘З╪з┘Е", importances_label: "╪з┘Д╪г┘З┘Е┘К╪й", time_label: "╪з┘Д┘И┘В╪к", schedule_label: "╪з┘Д╪м╪п┘И┘Д",
        advice_label: "┘Ж╪╡┘К╪н╪й", task_count: "╪з┘Д┘Е┘З╪з┘Е: {count}", error_tasks: "╪г╪п╪о┘Д ┘Е┘З┘Е╪й ┘И╪з╪н╪п╪й ╪╣┘Д┘Й ╪з┘Д╪г┘В┘Д.",
        error_importances: "┘К╪м╪и ╪г┘Ж ┘К╪к╪╖╪з╪и┘В ╪╣╪п╪п ╪з┘Д╪г┘З┘Е┘К╪з╪к ┘Е╪╣ ╪з┘Д┘Е┘З╪з┘Е.", error_time: "╪з╪│╪к╪о╪п┘Е ╪з┘Д╪к┘Ж╪│┘К┘В HH:MM - HH:MM.",
        error_save: "╪г╪п╪о┘Д ╪з╪│┘Е┘Л╪з ┘Д┘Д╪о╪╖╪й.", error_processing: "╪о╪╖╪г ┘Б┘К ╪з┘Д┘Е╪╣╪з┘Д╪м╪й.", loading: "╪м╪з╪▒ ╪з┘Д╪к╪н┘Е┘К┘Д...",
        language_title: "╪з╪о╪к╪▒ ╪з┘Д┘Д╪║╪й", style_title: "╪з╪о╪к╪▒ ╪з┘Д╪г╪│┘Д┘И╪и", theme_title: "╪к╪и╪п┘К┘Д ╪з┘Д╪л┘К┘Е",
        minimal: "╪и╪│┘К╪╖ ЁЯМЯ", retro: "╪▒╪м╪╣┘К ЁЯОЙ", cosmic: "┘Г┘И┘Ж┘К ЁЯММ", cyberpunk: "╪│╪з┘К╪и╪▒╪и╪з┘Ж┘Г ЁЯМА", industrial: "╪╡┘Ж╪з╪╣┘К тЪЩя╕П",
        hologram: "┘З┘И┘Д┘И╪║╪▒╪з┘Е ЁЯМИ", steampunk: "╪│╪к┘К┘Е╪и╪з┘Ж┘Г ЁЯХ░я╕П", aurora: "╪г┘И╪▒┘И╪▒╪з ЁЯМа", matrix: "┘Е╪з╪к╪▒┘К┘Г╪│ ЁЯТ╛", zen: "╪▓┘Р┘Ж ЁЯМ┐",
        cyberwave: "╪│╪з┘К╪и╪▒ ┘И┘К┘Б ЁЯМК", modern: "╪╣╪╡╪▒┘К ЁЯПЩя╕П"
    },
    it: {
        site_name: "Pianificatore di Compiti IA", title: "Pianificatore di Compiti IA", welcome: "Ciao! Sono il tuo pianificatore di compiti IA.",
        step_tasks: "Inserisci i compiti separati da virgole.", step_importances: "Specifica l'importanza (bassa, media, alta).",
        step_time: "Specifica l'orario (HH:MM - HH:MM).", step_save: "Inserisci il nome del piano.", placeholder_tasks: "Preparare una presentazione, Rispondere alle email",
        placeholder_importances: "alta, media, bassa", placeholder_time: "09:00 - 17:00", placeholder_save: "Il mio piano giornaliero",
        continue: "Continua", back: "Indietro", skip: "Salta", done: "Salva", success_message: "Piano creato!",
        history_title: "Cronologia dei Piani", no_history: "Nessun piano salvato.", clear_history: "Cancella Cronologia",
        tasks_label: "Compiti", importances_label: "Importanza", time_label: "Orario", schedule_label: "Programma",
        advice_label: "Consiglio", task_count: "Compiti: {count}", error_tasks: "Inserisci almeno un compito.",
        error_importances: "Il numero di importanze deve corrispondere ai compiti.", error_time: "Usa il formato HH:MM - HH:MM.",
        error_save: "Inserisci un nome per il piano.", error_processing: "Errore di elaborazione.", loading: "Caricamento...",
        language_title: "Seleziona Lingua", style_title: "Seleziona Stile", theme_title: "Cambia Tema",
        minimal: "Minimalista ЁЯМЯ", retro: "Retr├▓ ЁЯОЙ", cosmic: "Cosmico ЁЯММ", cyberpunk: "Cyberpunk ЁЯМА", industrial: "Industriale тЪЩя╕П",
        hologram: "Ologramma ЁЯМИ", steampunk: "Steampunk ЁЯХ░я╕П", aurora: "Aurora ЁЯМа", matrix: "Matrix ЁЯТ╛", zen: "Zen ЁЯМ┐",
        cyberwave: "Ciberonda ЁЯМК", modern: "Moderno ЁЯПЩя╕П"
    },
    ko: {
        site_name: "AI ьЮСьЧЕ эФМыЮШыДИ", title: "AI ьЮСьЧЕ эФМыЮШыДИ", welcome: "ьХИыЕХэХШьД╕ьЪФ! ьаАыКФ ыЛ╣ьЛаьЭШ AI ьЮСьЧЕ эФМыЮШыДИьЮЕыЛИыЛд.",
        step_tasks: "ьЙ╝эСЬыбЬ ъ╡мы╢ДыРЬ ьЮСьЧЕьЭД ьЮЕыаеэХШьД╕ьЪФ.", step_importances: "ьдСьЪФыПДые╝ ьзАьаХэХШьД╕ьЪФ (ыВоьЭМ, ы│┤эЖ╡, ыЖТьЭМ).",
        step_time: "ьЛЬъ░ДьЭД ьзАьаХэХШьД╕ьЪФ (HH:MM - HH:MM).", step_save: "ъ│ДэЪН ьЭ┤ыжДьЭД ьЮЕыаеэХШьД╕ьЪФ.", placeholder_tasks: "эФДыаИьааэЕМьЭ┤ьЕШ ьдАы╣Д, ьЭ┤ыйФьЭ╝ ыЛ╡ьЮе",
        placeholder_importances: "ыЖТьЭМ, ы│┤эЖ╡, ыВоьЭМ", placeholder_time: "09:00 - 17:00", placeholder_save: "ыВШьЭШ ьЭ╝ьЭ╝ ъ│ДэЪН",
        continue: "ъ│ДьЖН", back: "ыТдыбЬ", skip: "ъ▒┤ыДИыЫ░ъ╕░", done: "ьаАьЮе", success_message: "ъ│ДэЪНьЭ┤ ьГЭьД▒ыРШьЧИьК╡ыЛИыЛд!",
        history_title: "ъ│ДэЪН ъ╕░ыбЭ", no_history: "ьаАьЮеыРЬ ъ│ДэЪНьЭ┤ ьЧЖьК╡ыЛИыЛд.", clear_history: "ъ╕░ыбЭ ьзАьЪ░ъ╕░",
        tasks_label: "ьЮСьЧЕ", importances_label: "ьдСьЪФыПД", time_label: "ьЛЬъ░Д", schedule_label: "ьЭ╝ьаХ",
        advice_label: "ьб░ьЦ╕", task_count: "ьЮСьЧЕ: {count}", error_tasks: "ь╡ЬьЖМэХЬ эХШыВШьЭШ ьЮСьЧЕьЭД ьЮЕыаеэХШьД╕ьЪФ.",
        error_importances: "ьдСьЪФыПДьЭШ ьИШыКФ ьЮСьЧЕъ│╝ ьЭ╝ь╣ШэХ┤ьХ╝ эХйыЛИыЛд.", error_time: "HH:MM - HH:MM эШХьЛЭьЭД ьВмьЪйэХШьД╕ьЪФ.",
        error_save: "ъ│ДэЪН ьЭ┤ыжДьЭД ьЮЕыаеэХШьД╕ьЪФ.", error_processing: "ь▓Шыжм ьШдыеШ.", loading: "ыбЬыФй ьдС...",
        language_title: "ьЦ╕ьЦ┤ ьДаэГЭ", style_title: "ьКдэГАьЭ╝ ьДаэГЭ", theme_title: "эЕМызИ ьаДэЩШ",
        minimal: "ып╕ыЛИыйА ЁЯМЯ", retro: "ыаИэК╕ыбЬ ЁЯОЙ", cosmic: "ь╜ФьКдып╣ ЁЯММ", cyberpunk: "ьВмьЭ┤ы▓ДэОСэБм ЁЯМА", industrial: "ьЭ╕ыНФьКдэК╕ыжмьЦ╝ тЪЩя╕П",
        hologram: "эЩАыбЬъ╖╕ыЮи ЁЯМИ", steampunk: "ьКдэМАэОСэБм ЁЯХ░я╕П", aurora: "ьШдыбЬыЭ╝ ЁЯМа", matrix: "ыздэК╕ыжньКд ЁЯТ╛", zen: "ьаа ЁЯМ┐",
        cyberwave: "ьВмьЭ┤ы▓ДьЫиьЭ┤ы╕М ЁЯМК", modern: "ыкиыНШ ЁЯПЩя╕П"
    }
};

const themeIcons = {
    minimal: 'ЁЯМЯ', retro: 'ЁЯОЙ', cosmic: 'ЁЯММ', cyberpunk: 'ЁЯМА', industrial: 'тЪЩя╕П', hologram: 'ЁЯМИ', steampunk: 'ЁЯХ░я╕П',
    aurora: 'ЁЯМа', matrix: 'ЁЯТ╛', zen: 'ЁЯМ┐', cyberwave: 'ЁЯМК', modern: 'ЁЯПЩя╕П'
};

const toolbarIcons = {
    minimal: { lang: 'ЁЯМР', history: 'тМЫ', planner: 'ЁЯУЛ', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯОи' },
    retro: { lang: 'ЁЯУб', history: 'ЁЯХ░я╕П', planner: 'ЁЯУЕ', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯЦМя╕П' },
    cosmic: { lang: 'ЁЯкР', history: 'ЁЯМа', planner: 'ЁЯЪА', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯММ' },
    cyberpunk: { lang: 'LANG', history: 'HIST', planner: 'PLAN', theme: isDark => isDark ? 'LIGHT' : 'DARK', style: 'STYLE' },
    industrial: { lang: 'ЁЯМН', history: 'ЁЯЫая╕П', planner: 'ЁЯПн', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯФй' },
    hologram: { lang: 'ЁЯФо', history: 'ЁЯТ┐', planner: 'ЁЯУ▒', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'тЬи' },
    steampunk: { lang: 'ЁЯзн', history: 'тП│', planner: 'ЁЯУЬ', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'тЪЩя╕П' },
    aurora: { lang: 'ЁЯМН', history: 'ЁЯММ', planner: 'ЁЯМа', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯМИ' },
    matrix: { lang: 'ЁЯТ╛', history: 'ЁЯУЯ', planner: 'тМия╕П', theme: isDark => isDark ? 'LIGHT' : 'DARK', style: 'ЁЯЦея╕П' },
    zen: { lang: 'ЁЯМ┐', history: 'ЁЯХЙя╕П', planner: 'тШпя╕П', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯзШ' },
    cyberwave: { lang: 'ЁЯМР', history: 'ЁЯУб', planner: 'ЁЯУ▓', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯМК' },
    modern: { lang: 'ЁЯМР', history: 'тМЫ', planner: 'ЁЯУЛ', theme: isDark => isDark ? 'тШАя╕П' : 'ЁЯМЩ', style: 'ЁЯОи' }
};

let currentLang = localStorage.getItem('language') || 'en';
let userData = { step: 'tasks', tasks: [], importances: [], time: '', planName: '', result: '' };
let currentView = 'planner';
let history = JSON.parse(localStorage.getItem('plannerHistory') || '[]');
let currentStyle = localStorage.getItem('style') || 'minimal';
let isDarkMode = localStorage.getItem('isDarkMode') === 'true';

function sanitizeInput(input) {
    const div = document.createElement('div');
    div.textContent = input;
    return div.innerHTML;
}

function applyStyle(style, darkMode) {
    currentStyle = style;
    isDarkMode = darkMode;
    document.documentElement.className = `theme-${style}-${darkMode ? 'dark' : 'light'}`;
    localStorage.setItem('style', style);
    localStorage.setItem('isDarkMode', darkMode);
    updateButtonIcons();
    renderContent();
    setupAds();
    updateHighlight();
}

function updateButtonIcons() {
    const icons = toolbarIcons[currentStyle];
    document.getElementById('lang-btn').textContent = icons.lang;
    document.getElementById('history-btn').textContent = icons.history;
    document.getElementById('planner-btn').textContent = icons.planner;
    document.getElementById('theme-btn').textContent = typeof icons.theme === 'function' ? icons.theme(isDarkMode) : icons.theme;
    document.getElementById('style-btn').textContent = icons.style;
}

function updateHighlight() {
    const toolbar = document.getElementById('toolbar');
    const highlight = document.getElementById('highlight');
    const activeButton = toolbar.querySelector(`button[data-view="${currentView}"]`);
    if (activeButton) {
        const rect = activeButton.getBoundingClientRect();
        const toolbarRect = toolbar.getBoundingClientRect();
        highlight.style.width = `${rect.width}px`;
        highlight.style.height = `${rect.height}px`;
        highlight.style.left = `${rect.left - toolbarRect.left}px`;
        highlight.style.top = `${rect.top - toolbarRect.top}px`;
        highlight.style.opacity = '1';
    }
}

function showPlanner() { currentView = 'planner'; userData.step = 'tasks'; renderContent(); updateHighlight(); }
function showLanguageMenu() { currentView = 'language'; renderContent(); updateHighlight(); }
function showStyleMenu() { currentView = 'style'; renderContent(); updateHighlight(); }
function showHistory() { currentView = 'history'; renderContent(); updateHighlight(); }
function showTheme() { currentView = 'theme'; renderContent(); updateHighlight(); }

function switchStyle(style) { applyStyle(style, isDarkMode); showPlanner(); }
function switchLanguage(lang) {
    currentLang = lang;
    localStorage.setItem('language', lang);
    document.getElementById('title').innerText = translations[lang].title;
    document.title = translations[lang].site_name;
    updateButtonIcons();
    showPlanner();
}
function toggleTheme() { applyStyle(currentStyle, !isDarkMode); }

function setupAds() {
    const bigAd = document.getElementById('big-ad');
    bigAd.innerHTML = adConfig.big.text[currentLang] ? `<img src="${adConfig.big.imageSrc}" class="w-12 h-12 rounded"><span class="text-gray-700">${adConfig.big.text[currentLang]}</span>` : `<span class="text-gray-700">${translations[currentLang].no_ad || 'No ads!'}</span>`;
    bigAd.className = adConfig.big.text[currentLang] ? 'w-full max-w-md mt-4 bg-yellow-100 rounded-lg shadow p-4 flex items-center space-x-4 h-24 slide-in' : 'w-full max-w-md mt-4 bg-yellow-100 rounded-lg shadow p-4 flex items-center space-x-4 h-24 slide-in ad-empty';
    bigAd.onclick = adConfig.big.url ? () => window.open(adConfig.big.url, '_blank') : null;

    const smallAd = document.getElementById('small-ad');
    smallAd.innerHTML = adConfig.small.text[currentLang] ? `<img src="${adConfig.small.imageSrc}" class="w-8 h-8 rounded"><span class="text-gray-700 text-sm">${adConfig.small.text[currentLang]}</span>` : `<span class="text-gray-700 text-sm">${translations[currentLang].no_ad || 'No ads!'}</span>`;
    smallAd.className = adConfig.small.text[currentLang] ? 'w-full max-w-md mt-4 mb-4 bg-yellow-100 rounded-lg shadow p-4 flex items-center space-x-4 h-16 slide-in' : 'w-full max-w-md mt-4 mb-4 bg-yellow-100 rounded-lg shadow p-4 flex items-center space-x-4 h-16 slide-in ad-empty';
    smallAd.onclick = adConfig.small.url ? () => window.open(adConfig.small.url, '_blank') : null;
}

function clearHistory() { history = []; localStorage.setItem('plannerHistory', JSON.stringify(history)); renderContent(); }

function goBack() {
    if (userData.step === 'importances') userData.step = 'tasks';
    else if (userData.step === 'time') userData.step = 'importances';
    else if (userData.step === 'save') userData.step = 'time';
    else if (userData.step === 'done') userData.step = 'save';
    renderContent();
}

function skipStep() {
    if (userData.step === 'importances') {
        userData.importances = userData.tasks.map(() => translations[currentLang].placeholder_importances.split(', ')[1]);
        userData.step = 'time';
    } else if (userData.step === 'time') {
        userData.time = translations[currentLang].placeholder_time;
        userData.step = 'save';
    } else if (userData.step === 'save') {
        userData.planName = translations[currentLang].placeholder_save;
        userData.step = 'done';
        submitData();
        return;
    }
    renderContent();
}

function submitData() {
    const errorDiv = document.getElementById('error');
    errorDiv.classList.add('hidden');

    if (userData.step === 'tasks') {
        const input = document.getElementById('tasks-input')?.value.trim();
        if (!input) { errorDiv.innerText = translations[currentLang].error_tasks; errorDiv.classList.remove('hidden'); return; }
        userData.tasks = input.split(',').map(task => sanitizeInput(task.trim())).filter(task => task);
        userData.step = 'importances';
    } else if (userData.step === 'importances') {
        const input = document.getElementById('importances-input')?.value.trim();
        if (input) {
            const importances = input.split(',').map(imp => sanitizeInput(imp.trim())).filter(imp => imp);
            if (importances.length !== userData.tasks.length) { errorDiv.innerText = translations[currentLang].error_importances; errorDiv.classList.remove('hidden'); return; }
            userData.importances = importances;
        }
        userData.step = 'time';
    } else if (userData.step === 'time') {
        const input = document.getElementById('time-input')?.value.trim();
        if (input && !/^\d{2}:\d{2}\s*-\s*\d{2}:\d{2}$/.test(input)) { errorDiv.innerText = translations[currentLang].error_time; errorDiv.classList.remove('hidden'); return; }
        userData.time = input || translations[currentLang].placeholder_time;
        userData.step = 'save';
    } else if (userData.step === 'save') {
        const input = document.getElementById('save-input')?.value.trim();
        if (!input) { errorDiv.innerText = translations[currentLang].error_save; errorDiv.classList.remove('hidden'); return; }
        userData.planName = sanitizeInput(input);
        userData.step = 'done';
        processPlan();
    }
    renderContent();
}

function processPlan() {
    document.getElementById('loading').classList.remove('hidden');
    setTimeout(() => {
        const priorityMap = {
            high: 3, alta: 3, щлШ: 3, рдЙрдЪреНрдЪ: 3, ╨▓╤Л╤Б╨╛╨║╨░╤П: 3, ├йlev├йe: 3, hoch: 3, щлШ: 3, alta: 3, ╪╣╪з┘Д┘К╪й: 3, alta: 3, ыЖТьЭМ: 3,
            medium: 2, media: 2, ф╕н: 2, рдордзреНрдпрдо: 2, ╤Б╤А╨╡╨┤╨╜╤П╤П: 2, moyenne: 2, mittel: 2, ф╕н: 2, m├йdia: 2, ┘Е╪к┘И╪│╪╖╪й: 2, media: 2, ы│┤эЖ╡: 2,
            low: 1, baja: 1, ф╜О: 1, рдирд┐рдореНрди: 1, ╨╜╨╕╨╖╨║╨░╤П: 1, faible: 1, niedrig: 1, ф╜О: 1, baixa: 1, ┘Е┘Ж╪о┘Б╪╢╪й: 1, bassa: 1, ыВоьЭМ: 1
        };
        const tasksWithPriority = userData.tasks.map((task, i) => ({
            task,
            importance: userData.importances[i] || translations[currentLang].placeholder_importances.split(', ')[1],
            priority: priorityMap[(userData.importances[i] || translations[currentLang].placeholder_importances.split(', ')[1]).toLowerCase()] || 2
        }));
        tasksWithPriority.sort((a, b) => b.priority - a.priority);

        const [start, end] = userData.time.split('-').map(t => t.trim());
        const startTime = new Date(`2000-01-01 ${start}`);
        const endTime = new Date(`2000-01-01 ${end}`);
        const totalMinutes = (endTime - startTime) / 1000 / 60;
        const taskDuration = Math.floor(totalMinutes / tasksWithPriority.length);

        let currentTime = new Date(startTime);
        const schedule = tasksWithPriority.map(({ task, importance }) => {
            const taskStart = currentTime.toTimeString().slice(0, 5);
            currentTime.setMinutes(currentTime.getMinutes() + taskDuration);
            const taskEnd = currentTime.toTimeString().slice(0, 5);
            return `${taskStart}-${taskEnd}: ${task} (${importance})`;
        }).join('\n');

        const advice = `${translations[currentLang].advice_label}: Prioritize high-importance tasks early and review progress mid-day.`;
        userData.result = `${translations[currentLang].schedule_label}:\n${schedule}\n\n${advice}`;

        history.push({
            name: userData.planName,
            tasks: userData.tasks,
            importances: userData.importances,
            time: userData.time,
            result: userData.result,
            timestamp: new Date().toISOString()
        });
        localStorage.setItem('plannerHistory', JSON.stringify(history));

        triggerConfetti();
        document.getElementById('loading').classList.add('hidden');
        renderContent();
    }, 1000);
}

function triggerConfetti() {
    const confettiContainer = document.getElementById('confetti-container');
    confettiContainer.innerHTML = '';
    for (let i = 0; i < 50; i++) {
        const confetti = document.createElement('div');
        confetti.className = 'confetti';
        confetti.style.left = `${Math.random() * 100}vw`;
        confetti.style.animationDelay = `${Math.random() * 2}s`;
        confetti.style.background = `hsl(${Math.random() * 360}, 70%, 50%)`;
        confettiContainer.appendChild(confetti);
    }
    setTimeout(() => confettiContainer.innerHTML = '', 3000);
}

function renderContent() {
    const contentDiv = document.getElementById('content');
    const actionButtons = document.getElementById('action-buttons');
    const title = document.getElementById('title');
    const errorDiv = document.getElementById('error');
    const loadingDiv = document.getElementById('loading');
    contentDiv.innerHTML = '';
    actionButtons.innerHTML = '';
    errorDiv.classList.add('hidden');
    loadingDiv.classList.add('hidden');

    const lang = translations[currentLang];
    title.innerText = currentView === 'planner' ? lang.title : currentView === 'history' ? lang.history_title : currentView === 'language' ? lang.language_title : currentView === 'style' ? lang.style_title : lang.theme_title;

    if (currentView === 'planner') {
        if (userData.step === 'tasks') {
            contentDiv.innerHTML = `<p class="mb-2">${lang.step_tasks}</p><input id="tasks-input" class="input-animate" placeholder="${lang.placeholder_tasks}" value="${userData.tasks.join(', ')}"><p class="text-sm mt-2">${lang.task_count.replace('{count}', userData.tasks.length)}</p>`;
            actionButtons.innerHTML = `<button class="btn primary-btn" onclick="submitData()">${lang.continue}</button>`;
        } else if (userData.step === 'importances') {
            contentDiv.innerHTML = `<p class="mb-2">${lang.step_importances}</p><input id="importances